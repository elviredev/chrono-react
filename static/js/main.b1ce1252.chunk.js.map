{"version":3,"sources":["Images/pause.svg","Images/play.svg","Images/reset.svg","Chrono/Chrono.js","App.js","index.js"],"names":["Chrono","useState","sessionTime","setSessionTime","sessionTimeFixed","setSessionTimeFixed","breakTime","setBreakTime","breakTimeFixed","setBreakTimeFixed","workingChrono","setWorkingChrono","useReducer","state","action","type","dispatch","useEffect","id","window","setInterval","clearInterval","handleSession","e","el","target","classList","contains","handleBreak","className","onClick","Math","trunc","src","PauseImg","PlayImg","alt","ResetImg","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAAe,G,MAAA,IAA0B,mCCA1B,MAA0B,iCCA1B,MAA0B,kC,OCM1B,SAASA,IAAU,IAAD,EAESC,mBAAS,MAFlB,mBAEtBC,EAFsB,KAETC,EAFS,OAGmBF,mBAAS,MAH5B,mBAGtBG,EAHsB,KAGJC,EAHI,OAKKJ,mBAAS,KALd,mBAKtBK,EALsB,KAKXC,EALW,OAMeN,mBAAS,KANxB,mBAMtBO,EANsB,KAMNC,EANM,OAQaR,oBAAS,GARtB,mBAQtBS,EARsB,KAQPC,EARO,OASHC,sBAE1B,SAAiBC,EAAOC,GACpB,OAAOA,EAAOC,MACV,IAAK,OACEb,GAAe,EACdC,EAAeD,EAAc,GACvBI,GAAa,EACnBC,EAAaD,EAAW,GAClBJ,GAAe,GAAKI,GAAa,IACvCH,EAAeC,GACfG,EAAaC,QApBA,mBASfQ,GATe,WA0B7BC,qBAAU,WAEN,IAAIC,EAUJ,OARGR,IAECQ,EAAKC,OAAOC,aAAY,WACpBJ,EAAS,CAACD,KAAM,WACjB,MAIA,WACHI,OAAOE,cAAcH,MAG1B,CAACR,IAGJ,IAIMY,EAAgB,SAAAC,GAElB,IAAMC,EAAKD,EAAEE,OAEVD,EAAGE,UAAUC,SAAS,SAClBzB,EAAc,GAAK,IAClBC,EAAeD,EAAc,IAC7BG,EAAoBD,EAAmB,KAErCoB,EAAGE,UAAUC,SAAS,UAC5BxB,EAAeD,EAAc,IACzBG,EAAoBD,EAAmB,MAK7CwB,EAAc,SAAAL,GAChB,IAAMC,EAAKD,EAAEE,OAEVD,EAAGE,UAAUC,SAAS,SAClBrB,EAAY,GAAK,IAChBC,EAAaD,EAAY,IACzBG,EAAkBD,EAAiB,KAEjCgB,EAAGE,UAAUC,SAAS,UAC5BpB,EAAaD,EAAY,IACzBG,EAAkBD,EAAiB,MAY3C,OACI,sBAAKqB,UAAWnB,EAAgB,6BAA+B,mBAA/D,UAEI,sBAAKmB,UAAU,mBAAf,UAEI,sBAAKA,UAAU,mBAAf,UACI,wBAAQC,QAASR,EAAeO,UAAU,QAA1C,eACA,+BAAOzB,EAAmB,KAC1B,wBAAQ0B,QAASR,EAAeO,UAAU,OAA1C,kBAGJ,sBAAKA,UAAU,iBAAf,UACI,wBAAQC,QAASF,EAAaC,UAAU,QAAxC,eACA,+BAAOrB,EAAiB,KACxB,wBAAQsB,QAASF,EAAaC,UAAU,OAAxC,qBAKR,6BACK3B,GAAe,EACZ,sBAAM2B,UAAU,eAAhB,mBACQE,KAAKC,MAAM9B,EAAc,IADjC,cAC0CA,EAAc,GAAK,GAAnB,WAA4BA,EAAc,IAA1C,UAAoDA,EAAc,OAE5G,sBAAM2B,UAAU,eAAhB,mBACQE,KAAKC,MAAM1B,EAAY,IAD/B,cACwCA,EAAY,GAAK,GAAjB,WAA0BA,EAAY,IAAtC,UAAgDA,EAAY,SAI5G,sBAAKuB,UAAU,wBAAf,UACI,wBAAQC,QAxEF,WACdnB,GAAkBD,IAuEV,SACI,qBAAKuB,IAAKvB,EAAgBwB,EAAWC,EAASC,IAAI,iBAEtD,wBAAQN,QAzCF,WACXpB,GACCC,GAAkBD,GAEtBP,EAAeC,GACfG,EAAaC,IAoCL,SACI,qBAAKyB,IAAKI,EAAUD,IAAI,wBCrH7BE,MARf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,OCANU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.b1ce1252.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pause.f8c47a1a.svg\";","export default __webpack_public_path__ + \"static/media/play.b23df41a.svg\";","export default __webpack_public_path__ + \"static/media/reset.adefad1d.svg\";","import React, { useState, useEffect, useReducer } from 'react'\r\nimport './Chrono.css'\r\nimport PauseImg from '../Images/pause.svg'\r\nimport PlayImg from '../Images/play.svg'\r\nimport ResetImg from '../Images/reset.svg'\r\n\r\nexport default function Chrono() {\r\n\r\n    const [sessionTime, setSessionTime] = useState(1500);\r\n    const [sessionTimeFixed, setSessionTimeFixed] = useState(1500);\r\n\r\n    const [breakTime, setBreakTime] = useState(300);\r\n    const [breakTimeFixed, setBreakTimeFixed] = useState(300);\r\n\r\n    const [workingChrono, setWorkingChrono] = useState(false);\r\n    const [state, dispatch] = useReducer(reducer);\r\n\r\n    function reducer(state, action) {\r\n        switch(action.type){\r\n            case 'TICK':\r\n                if(sessionTime >= 0) {\r\n                    setSessionTime(sessionTime - 1)\r\n                } else if(breakTime >= 1) {\r\n                    setBreakTime(breakTime -1)\r\n                } else if(sessionTime <= 0 && breakTime <= 0) {\r\n                    setSessionTime(sessionTimeFixed)\r\n                    setBreakTime(breakTimeFixed)\r\n                }\r\n        }\r\n    }\r\n    //console.log(sessionTime, breakTime);\r\n\r\n    useEffect(() => {\r\n        \r\n        let id;\r\n\r\n        if(workingChrono){\r\n\r\n            id = window.setInterval(() => {\r\n                dispatch({type: \"TICK\"})\r\n            }, 1000)\r\n\r\n        }\r\n\r\n        return () => {\r\n            window.clearInterval(id)\r\n        }\r\n\r\n    }, [workingChrono])\r\n\r\n\r\n    const playPause = () => {\r\n        setWorkingChrono(!workingChrono)\r\n    }\r\n\r\n    const handleSession = e => {\r\n\r\n        const el = e.target;\r\n\r\n        if(el.classList.contains('minus')) {\r\n            if(sessionTime / 60 > 1) {\r\n                setSessionTime(sessionTime - 60)\r\n                setSessionTimeFixed(sessionTimeFixed - 60)\r\n            }\r\n        } else if(el.classList.contains('plus')) {\r\n            setSessionTime(sessionTime + 60)\r\n                setSessionTimeFixed(sessionTimeFixed + 60)\r\n        }\r\n\r\n    }\r\n\r\n    const handleBreak = e => {\r\n        const el = e.target;\r\n\r\n        if(el.classList.contains('minus')) {\r\n            if(breakTime / 60 > 1) {\r\n                setBreakTime(breakTime - 60)\r\n                setBreakTimeFixed(breakTimeFixed - 60)\r\n            }\r\n        } else if(el.classList.contains('plus')) {\r\n            setBreakTime(breakTime + 60)\r\n            setBreakTimeFixed(breakTimeFixed + 60)\r\n        }\r\n    }\r\n\r\n    const resetFunc = () => {\r\n        if(workingChrono) {\r\n            setWorkingChrono(!workingChrono)\r\n        }\r\n        setSessionTime(sessionTimeFixed)\r\n        setBreakTime(breakTimeFixed)\r\n    }\r\n\r\n    return (\r\n        <div className={workingChrono ? \"container-chrono anim-glow\" : \"container-chrono\"}>\r\n            \r\n            <div className=\"container-config\">\r\n\r\n                <div className=\"box-btns session\">\r\n                    <button onClick={handleSession} className=\"minus\">-</button>\r\n                    <span>{sessionTimeFixed / 60}</span>\r\n                    <button onClick={handleSession} className=\"plus\">+</button>\r\n                </div>\r\n\r\n                <div className=\"box-btns break\">\r\n                    <button onClick={handleBreak} className=\"minus\">-</button>\r\n                    <span>{breakTimeFixed / 60}</span>\r\n                    <button onClick={handleBreak} className=\"plus\">+</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <h1>\r\n                {sessionTime >= 0 ? (\r\n                    <span className=\"bg-span-blue\">\r\n                        {`${Math.trunc(sessionTime / 60)} : ${sessionTime % 60 < 10 ? `0${sessionTime % 60}` : `${sessionTime % 60}`}`}\r\n                    </span>\r\n                ) : <span className=\"bg-span-pink\">\r\n                        {`${Math.trunc(breakTime / 60)} : ${breakTime % 60 < 10 ? `0${breakTime % 60}` : `${breakTime % 60}`}`}\r\n                    </span>}\r\n            </h1>\r\n\r\n            <div className=\"container-controllers\">\r\n                <button onClick={playPause}>\r\n                    <img src={workingChrono ? PauseImg : PlayImg} alt=\"icone play\" />\r\n                </button>\r\n                <button onClick={resetFunc}>\r\n                    <img src={ResetImg} alt=\"icone reset\" />\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import Chrono from './Chrono/Chrono'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Chrono />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}